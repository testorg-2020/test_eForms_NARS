name: Cloud-gov Local Build

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Get app name from local.yml
        run: python .github/get_app_name.py >> $GITHUB_ENV

      - name: Print app name
        run: echo ${{ env.app_name }}

      - name: Get docker tag
        run: echo 'print("docker_tag=ghcr.io/" + "${{ github.repository }}".lower() + "/" + "${{ env.app_name }}" + ":" + "${{ github.run_id }})"' | python >> $GITHUB_ENV

      - name: Print docker tag
        run: echo ${{ env.docker_tag }}

      - name: Make build.sh executable
        run: chmod +x .github/build.sh

      - name: Set up cloud foundry CLI
        run: sudo .github/build.sh
        shell: bash

      - name: Make install_cflocal.sh executable
        run: chmod +x .github/install_cflocal.sh

      - name: Install cfLocal
        run: .github/install_cflocal.sh
        shell: bash

      - name: Stage R Shiny app
        run: cf local stage "${{ env.app_name }}" -b https://github.com/cloudfoundry/r-buildpack.git

      - name: Show Files in GitHub Workspace
        run: ls -R ${{ github.workspace }}

      # - name: Upload R Shiny droplet as artifact for future steps
      #   uses: actions/upload-artifact@v2
      #   with:
      #     path: nars-dataextr.droplet

      - name: Export droplet as Docker image
        run: cf local export "${{ env.app_name }}" -r "${{ env.docker_tag }}"

      - name: Show Files in GitHub Workspace
        run: ls -R ${{ github.workspace }}

      - name: List Docker images
        run: docker images

      - name: Login to GitHub packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image to GitHub Container Registry
        shell: bash
        run: docker push "${{ env.docker_tag }}"
